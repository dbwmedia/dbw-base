@use "../_global" as *;

//--------------------------------------------------------------
// # Grid & Flex System - Override with #main
//--------------------------------------------------------------

//==============================================================
// # SMART AUTO GRID SYSTEM
//==============================================================

// Base Grid Container
#main .grid {
	display: grid !important;
	gap: $gap-xl;
}

//--------------------------------------------------------------
// # Auto Grid Classes (JavaScript Applied)
//--------------------------------------------------------------

// 1 Child - Full Width Centered
#main .grid-auto-1 {
	grid-template-columns: 1fr;

	> div {
		max-width: 600px;
		margin: 0 auto;
	}
}

// 2 Children - Two Columns
#main .grid-auto-2 {
	grid-template-columns: repeat(2, 1fr);

	@include mq($until: $tablet) {
		grid-template-columns: 1fr;
	}
}

// 3 Children - Three Columns
#main .grid-auto-3 {
	grid-template-columns: repeat(3, 1fr);
	gap: $gap-s;

	@include mq($until: $laptop) {
		grid-template-columns: repeat(2, 1fr);
	}

	@include mq($until: $tablet) {
		grid-template-columns: 1fr;
	}
}

// 4 Children - Four Columns
#main .grid-auto-4 {
	grid-template-columns: repeat(4, 1fr);
	gap: $gap-s;

	@include mq($until: $laptop) {
		grid-template-columns: repeat(2, 1fr);
	}

	@include mq($until: $tablet) {
		grid-template-columns: 1fr;
	}
}

// 5 Children - Five Columns
#main .grid-auto-5 {
	grid-template-columns: repeat(5, 1fr);
	gap: $gap-s;

	@include mq($until: $laptop) {
		grid-template-columns: repeat(3, 1fr);
	}

	@include mq($until: $tablet) {
		grid-template-columns: repeat(2, 1fr);
	}

	@include mq($until: $mobile) {
		grid-template-columns: 1fr;
	}
}

// 6+ Children - Auto-Fit Many Items
#main .grid-auto-6,
#main .grid-auto-many {
	grid-template-columns: repeat(auto-fit, minmax(min(200px, 100%), 1fr));

	@include mq($until: $tablet) {
		grid-template-columns: repeat(auto-fit, minmax(min(150px, 100%), 1fr));
	}

	@include mq($until: $mobile) {
		grid-template-columns: 1fr;
	}
}

//--------------------------------------------------------------
// # Smart Responsive Auto Grid
//--------------------------------------------------------------
#main .grid-responsive {
	display: grid !important;
	gap: $gap-s;
	grid-template-columns: repeat(auto-fit, minmax(min(250px, 100%), 1fr));

	> div {
		display: flex;
		flex-direction: column;
		align-items: center;
		text-align: center;
	}

	@include mq($until: $tablet) {
		grid-template-columns: repeat(auto-fit, minmax(min(200px, 100%), 1fr));
	}

	@include mq($until: $mobile) {
		grid-template-columns: 1fr;
	}
}

//==============================================================
// # STATIC GRID SYSTEM
//==============================================================

//--------------------------------------------------------------
// # Two Column Grids
//--------------------------------------------------------------
#main .grid-two {
	display: grid !important;
	grid-template-columns: repeat(2, 1fr);
	gap: $gap-s;

	// > div {
	// 	display: flex;
	// 	flex-direction: column;
	// 	align-items: center;
	// 	text-align: center;
	// }

	@include mq($until: $mobile) {
		grid-template-columns: 1fr;
	}
}

//--------------------------------------------------------------
// # Three Column Grids
//--------------------------------------------------------------
#main .grid-three {
	display: grid !important;
	grid-template-columns: repeat(3, 1fr);
	gap: $gap-s;

	.item {
		display: flex;
		flex-direction: column;
		gap: $gap-s;
	}

	@include mq($until: $laptop) {
		grid-template-columns: repeat(2, 1fr);
	}

	@include mq($until: $tablet) {
		grid-template-columns: 1fr;

		// > div {
		// 	display: flex;
		// 	flex-direction: column;
		// 	align-items: stretch;
		// 	flex-grow: 1;

		// 	p {
		// 		text-align: center;
		// 	}
		// }
	}
}

#main .grid-three-auto {
	display: grid !important;
	grid-template-columns: repeat(auto-fill, minmax(min(376px, 100%), 1fr));
	gap: $gap-s;

	> div {
		display: flex;
		flex-direction: column;
		align-items: center;
		text-align: center;
	}
}

//--------------------------------------------------------------
// # Four Column Grids
//--------------------------------------------------------------
#main .grid-four {
	display: grid !important;
	grid-template-columns: repeat(4, 1fr);
	gap: $gap-s;

	.item {
		display: flex;
		flex-direction: column;
		gap: $gap-s;
	}

	@include mq($until: $laptop) {
		grid-template-columns: repeat(2, 1fr);
	}

	@include mq($until: $tablet) {
		grid-template-columns: 1fr;

		// > div {
		// 	display: flex;
		// 	flex-direction: column;
		// 	align-items: stretch;
		// 	flex-grow: 1;

		// 	p {
		// 		text-align: center;
		// 	}
		// }
	}
}

//--------------------------------------------------------------
// # Development Grid
//--------------------------------------------------------------
#main .grid-dev {
	display: grid !important;
	grid-template-columns: repeat(auto-fill, minmax(min(390px, 100%), 1fr));
	gap: 16px;
}

//==============================================================
// # LAYOUT GRIDS (Proportional)
//==============================================================

//--------------------------------------------------------------
// # Two Column Layout Variations
//--------------------------------------------------------------
#main .grid-six-six {
	display: grid;
	grid-template-columns: 6fr 6fr;
	gap: $gap;
	margin: $s-md auto;

	> div {
		display: flex;
		flex-direction: column;
	}

	@include mq($until: $laptop) {
		grid-template-columns: 1fr;
		gap: $gap-s;
	}

	@include mq($until: $mobile) {
		gap: 16px;
	}
}

#main .grid-eight-four {
	display: grid;
	grid-template-columns: 8fr 4fr;
	gap: $gap;

	> div {
		display: flex;
		flex-direction: column;
	}

	@include mq($until: $laptop) {
		grid-template-columns: 1fr;
		gap: $gap-s;

		> div {
			align-items: flex-start;
		}
	}

	@include mq($until: $mobile) {
		gap: 16px;
	}
}

#main .grid-four-eight {
	display: grid;
	grid-template-columns: 4fr 8fr;
	gap: $gap;
	margin: $s-md auto;

	> div {
		display: flex;
		flex-direction: column;
	}

	@include mq($until: $laptop) {
		grid-template-columns: 1fr;
		gap: $gap-s;
	}

	@include mq($until: $mobile) {
		gap: 16px;
	}
}

#main .grid-nine-three {
	display: grid;
	grid-template-columns: 9fr 3fr;
	gap: $gap;
	margin: $s-md auto;

	> div {
		display: flex;
		flex-direction: column;
	}

	@include mq($until: $laptop) {
		grid-template-columns: 1fr;
		gap: $gap-s;
	}

	@include mq($until: $mobile) {
		gap: 16px;
	}
}

#main .grid-two-ten {
	display: grid;
	grid-template-columns: 2fr 10fr;
	gap: $gap;
	margin: $s-md auto;

	> div {
		display: flex;
		flex-direction: column;
	}

	@include mq($until: $laptop) {
		grid-template-columns: 1fr;
		gap: $gap-s;
	}

	@include mq($until: $mobile) {
		gap: 16px;
	}
}

//--------------------------------------------------------------
// # Three Column Layout
//--------------------------------------------------------------
#main .grid-three-three-six {
	display: grid;
	grid-template-columns: 3fr 3fr 6fr;
	gap: $gap;
	margin: $s-md auto;

	> div {
		display: flex;
		flex-direction: column;
	}

	@include mq($until: $laptop) {
		grid-template-columns: 1fr;
		gap: $gap-s;
	}

	@include mq($until: $mobile) {
		gap: 16px;
	}
}

//==============================================================
// # FLEXBOX SYSTEM
//==============================================================

//--------------------------------------------------------------
// # Two Column Flex
//--------------------------------------------------------------
#main .flex-two {
	display: flex;
	gap: 75px;
	margin: $s-md auto;

	> div {
		display: flex;
		flex: 1;
		flex-direction: column;
		align-items: flex-start;
	}

	@include mq($until: $laptop) {
		flex-direction: column;

		> div {
			display: flex;
			flex-direction: column;
			align-items: flex-start;

			p {
				text-align: left;
			}
		}
	}
}

#main .flex-two-content-width {
	.content {
		display: flex;
		gap: 75px;
		margin: $s-md auto;

		> div {
			display: flex;
			flex: 1;
			flex-direction: column;
			align-items: flex-start;
		}
	}

	@include mq($until: $laptop) {
		.content {
			flex-direction: column;

			> div {
				display: flex;
				flex-direction: column;
				align-items: flex-start;

				p {
					text-align: left;
				}
			}
		}
	}
}

//--------------------------------------------------------------
// # Three Column Flex
//--------------------------------------------------------------
#main .flex-three {
	display: flex;
	gap: $gap-s;
	margin: $s-md auto;

	> div {
		display: flex;
		flex: 1;
		flex-direction: column;
		align-items: center;
	}

	@include mq($until: $desktop) {
		flex-direction: column;

		> div {
			display: flex;
			flex-direction: column;
			align-items: center;

			p {
				text-align: center;
			}
		}
	}
}

//--------------------------------------------------------------
// # Flex Utilities
//--------------------------------------------------------------
#main .d-flex-wrap {
	display: flex;
	flex-wrap: wrap;
	gap: 10px;
}

#main .d-flex-wrap-justify-spacearound {
	display: flex;
	flex-wrap: wrap;
	gap: 10px;
	justify-content: space-around;
}

//==============================================================
// # GRID MODIFIERS & UTILITIES
//==============================================================

//--------------------------------------------------------------
// # Alignment Modifiers
//--------------------------------------------------------------
#main .grid-left {
	> div {
		align-items: flex-start;
		text-align: left;
	}
}

#main .grid-right {
	> div {
		align-items: flex-end;
		text-align: right;
	}
}

#main .grid-stretch {
	> div {
		align-items: stretch;
		height: 100%;
	}
}

//--------------------------------------------------------------
// # Gap Modifiers
//--------------------------------------------------------------
#main .grid-gap-none {
	gap: 0;
}

#main .grid-gap-small {
	gap: $gap-s;
}

#main .grid-gap-large {
	gap: $gap-xl;
}

//--------------------------------------------------------------
// # Equal Height Items
//--------------------------------------------------------------
#main .grid-equal-height {
	> div {
		display: flex;
		flex-direction: column;
		height: 100%;

		> *:last-child {
			margin-top: auto;
		}
	}
}

//==============================================================
// # DEBUGGING & DEVELOPMENT
//==============================================================

//--------------------------------------------------------------
// # Debug Helper
//--------------------------------------------------------------
#main .grid-debug {
	outline: 2px dashed $c-primary;
	position: relative;

	> div {
		outline: 1px solid $c-gray;
		background: rgba($c-primary, 0.05);
	}

	&::before {
		content: attr(class);
		position: absolute;
		top: -20px;
		left: 0;
		font-size: 12px;
		color: $c-primary;
		background: $c-white;
		padding: 2px 6px;
		border-radius: $radius-subtle;
		z-index: 10;
		box-shadow: 0 2px 4px rgba($c-black, 0.1);
	}
}
