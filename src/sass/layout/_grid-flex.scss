@use "../_global" as *;

/* Flexbox */
.flex-two {
	display: flex;
	gap: 75px;
	margin: 50px auto;

	> div {
		display: flex;
		flex: 1;
		flex-direction: column;
		align-items: flex-start;
	}

	/* Breakpoint Settings */

	@include mq($until: $laptop) {
		flex-direction: column;
		> div {
			display: flex;
			flex-direction: column;
			align-items: flex-start;
			p {
				text-align: left;
			}
		}
	}
}

.flex-two-content-width {
	.content {
		display: flex;
		gap: 75px;
		margin: 50px auto;
		> div {
			display: flex;
			flex: 1;
			flex-direction: column;
			align-items: flex-start;
		}
	}

	/* Breakpoint Settings */

	@include mq($until: $laptop) {
		.content {
			flex-direction: column;

			> div {
				display: flex;
				flex-direction: column;
				align-items: flex-start;
				p {
					text-align: left;
				}
			}
		}
	}
}

.flex-three {
	display: flex;
	gap: $gap-s;
	margin: 50px auto;

	> div {
		display: flex;
		flex: 1;
		flex-direction: column;
		align-items: center;
	}

	/* Breakpoint Settings */

	@include mq($until: $desktop) {
		flex-direction: column;
		> div {
			display: flex;
			flex-direction: column;
			align-items: center;
			p {
				text-align: center;
			}
		}
	}
}

.d-flex-wrap {
	display: flex;
	flex-wrap: wrap;
	gap: 10px;
}
s .d-flex-wrap-justify-spacearound {
	display: flex;
	flex-wrap: wrap;
	gap: 10px;
	justify-content: space-around;
}

/* Grid */

.grid-two {
	display: grid !important;
	grid-template-columns: repeat(2, 1fr);
	gap: $gap-s;

	> div {
		display: flex;
		flex-direction: column;
		align-items: center;
		text-align: center; // Für p-Tags direkt anwenden
	}

	/* Breakpoint Settings */

	@include mq($until: $laptop) {
	}

	@include mq($until: $mobile) {
		grid-template-columns: repeat(1, 1fr);
	}
}

.grid-three {
	display: grid !important;
	grid-template-columns: repeat(3, 1fr);
	gap: $gap-s;

	.item {
		display: flex;
		flex-direction: column;
		gap: 20px;
	}

	/* Breakpoint Settings */

	@include mq($until: $laptop) {
		grid-template-columns: repeat(2, 1fr);
	}

	@include mq($until: $tablet) {
		grid-template-columns: repeat(1, 1fr);
		> div {
			display: flex;
			flex-direction: column;
			align-items: stretch;
			flex-grow: 1;
			p {
				text-align: center;
			}
		}
	}
}

.grid-three-auto {
	display: grid !important;
	grid-template-columns: repeat(auto-fill, minmax(min(376px, 100%), 1fr));
	gap: $gap-s;

	> div {
		display: flex;
		flex-direction: column;
		align-items: center;
		text-align: center; // Für p-Tags direkt anwenden
	}

	/* Breakpoint Settings */

	@include mq($until: $laptop) {
	}

	@include mq($until: $mobile) {
	}
}

.grid-dev {
	display: grid !important;
	grid-template-columns: repeat(auto-fill, minmax(min(390px, 100%), 1fr));
	gap: 16px; /* Abstand zwischen den Elementen */
}

.grid-four {
	display: grid !important;
	grid-template-columns: repeat(4, 1fr);
	gap: $gap-s;

	.item {
		display: flex;
		flex-direction: column;
		gap: 20px;
	}

	/* Breakpoint Settings */

	@include mq($until: $laptop) {
		grid-template-columns: repeat(2, 1fr);
	}

	@include mq($until: $tablet) {
		grid-template-columns: repeat(1, 1fr);
		> div {
			display: flex;
			flex-direction: column;
			align-items: stretch;
			flex-grow: 1;
			p {
				text-align: center;
			}
		}
	}
}

.grid-eight-four {
	display: grid;
	grid-template-columns: 8fr 4fr; // Linke Spalte 8/12, rechte Spalte 4/12
	gap: $gap; // Abstand zwischen den Spalten
	//margin: 50px auto;

	> div {
		display: flex;
		flex-direction: column;
	}

	// Breakpoint für Laptop und kleiner
	@include mq($until: $laptop) {
		grid-template-columns: 1fr; // Beide Spalten untereinander
		gap: 20px;

		> div {
			align-items: flex-start; // Inhalte links ausrichten
		}
	}

	// Breakpoint für Mobile
	@include mq($until: $mobile) {
		gap: 16px; // Kleineren Abstand auf mobilen Geräten
	}
}

.grid-six-six {
	display: grid;
	grid-template-columns: 6fr 6fr; // Gleiche Breite für beide Spalten
	gap: 40px; // Abstand zwischen den Spalten
	margin: 50px auto;

	> div {
		display: flex;
		flex-direction: column;
	}

	@include mq($until: $laptop) {
		grid-template-columns: 1fr; // Beide Spalten untereinander
		gap: 20px;
	}

	@include mq($until: $mobile) {
		gap: 16px;
	}
}

.grid-nine-three {
	display: grid;
	grid-template-columns: 9fr 3fr; // Linke Spalte größer
	gap: $gap;
	margin: 50px auto;

	> div {
		display: flex;
		flex-direction: column;
	}

	@include mq($until: $laptop) {
		grid-template-columns: 1fr;
		gap: 20px;
	}

	@include mq($until: $mobile) {
		gap: 16px;
	}
}

.grid-four-eight {
	display: grid;
	grid-template-columns: 4fr 8fr; // Rechte Spalte dominiert
	gap: $gap;
	margin: 50px auto;

	> div {
		display: flex;
		flex-direction: column;
	}

	@include mq($until: $laptop) {
		grid-template-columns: 1fr;
		gap: 20px;
	}

	@include mq($until: $mobile) {
		gap: 16px;
	}
}

.grid-three-three-six {
	display: grid;
	grid-template-columns: 3fr 3fr 6fr; // Drei Spalten mit unterschiedlichen Breiten
	gap: $gap;
	margin: 50px auto;

	> div {
		display: flex;
		flex-direction: column;
	}

	@include mq($until: $laptop) {
		grid-template-columns: 1fr; // Alle Spalten untereinander
		gap: 20px;
	}

	@include mq($until: $mobile) {
		gap: 16px;
	}
}

.grid-two-ten {
	display: grid;
	grid-template-columns: 2fr 10fr; // Linke Spalte schmal
	gap: $gap;
	margin: 50px auto;

	> div {
		display: flex;
		flex-direction: column;
	}

	@include mq($until: $laptop) {
		grid-template-columns: 1fr;
		gap: 20px;
	}

	@include mq($until: $mobile) {
		gap: 16px;
	}
}
